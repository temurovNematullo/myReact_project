{"version":3,"file":"static/js/134.57f80694.chunk.js","mappings":"+JACA,SAAgB,WAAa,0BAA0B,QAAU,uBAAuB,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,yB,0CCQrK,MAyDA,EAzDkBA,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,OACX,SACFC,EAAQ,aACRC,EAAY,SACZC,EACAC,WAAW,OAAEC,EAAM,cAAEC,KACrBC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,WAQpB,OACIC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAIC,QAASC,SAAUX,GAP1BY,IACdC,QAAQJ,IAAI,mFAAmBG,GAC/BjB,GAASmB,EAAAA,EAAAA,IAAMF,EAAKG,MAAOH,EAAKI,SAAUJ,EAAKK,WAAYhB,EAAUJ,GAAU,IAKhBqB,SAAA,EAC3DX,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAIU,UAAUD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,GAAEH,SAAC,WAClBE,EAAAA,EAAAA,KAAA,SACIE,KAAK,QACLd,UAAW,GAAGC,EAAIc,cAAcpB,EAAOY,OAASZ,EAAOqB,OAASf,EAAIgB,MAAQ,QACxE1B,EAAS,QAAS2B,EAAAA,EAAgBX,SAEzCX,EAAcW,OAASZ,EAAOY,QAASK,EAAAA,EAAAA,KAAA,KAAAF,SAAIf,EAAOY,MAAMY,cAG7DpB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAIU,UAAUD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,0CACPE,EAAAA,EAAAA,KAAA,SACIZ,UAAW,GAAGC,EAAIc,cAAcpB,EAAOa,UAAYb,EAAOqB,OAASf,EAAIgB,MAAQ,KAC/EH,KAAK,cACDvB,EAAS,WAAY2B,EAAAA,EAAgBV,YAE5Cb,EAAOa,WAAYI,EAAAA,EAAAA,KAAA,KAAAF,SAAIf,EAAOa,SAASW,cAG5CP,EAAAA,EAAAA,KAAA,OAAKZ,UAAWC,EAAIU,UAAUD,UAC1BX,EAAAA,EAAAA,MAAA,SAAAW,SAAA,EACIE,EAAAA,EAAAA,KAAA,SAAOZ,UAAWC,EAAImB,SAAUN,KAAK,cAAevB,EAAS,gBAAiB,uFAKrFI,EAAOqB,SAEAJ,EAAAA,EAAAA,KAAA,KAAAF,SAAIf,EAAOqB,OAAOG,WAI1BP,EAAAA,EAAAA,KAAA,UAAQZ,UAAWC,EAAIoB,UAAWP,KAAK,SAAQJ,SAAC,qCAC7C,C,kCC9DR,MAAMQ,EAAkB,CAC3BX,MAAO,CACHe,SAAU,mDACVC,QAAQ,CACJC,MAAO,iBACPL,QAAS,kHAGjBX,SAAU,CACNc,SAAU,kFACVG,UAAW,CACXD,MAAO,EACPL,QAAS,kGAGbO,eAAgB,CACZJ,SAAU,6HACVK,UAAW,CACPH,MAAO,GACPL,QAAS,8GAGjBS,gBAAkBC,IAAK,CACnBP,SAAU,8FACVQ,SAAWN,GACXA,IAAUK,EAAM,aAAe,6G","sources":["webpack://myreact-app/./src/components/Login/login.module.css?7136","components/Login/login.jsx","UTILS/validations.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"emailInput\":\"login_emailInput__wPtmd\",\"logForm\":\"login_logForm__0D+jb\",\"logButton\":\"login_logButton__Jpfce\",\"error\":\"login_error__kcNte\",\"errorRow\":\"login_errorRow__HUsVN\"};","import { useForm } from \"react-hook-form\";\r\nimport { validationRules } from \"../../UTILS/validations\";\r\nimport log from \"./login.module.css\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { Login } from \"../../redux/auth-reducer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n  \r\n    const navigate = useNavigate();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        formState: { errors, touchedFields },\r\n    } = useForm({ mode: \"onBlur\" });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"Данные из формы\", data);\r\n        dispatch(Login(data.email, data.password, data.rememberMe, setError, navigate));\r\n    };\r\n\r\n   \r\n    return (\r\n        <form className={log.logForm} onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={log.formGroup}>\r\n                <label htmlFor=\"\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className={`${log.emailInput} ${errors.email || errors._error ? log.error : \"\"}`}\r\n                    {...register(\"email\", validationRules.email)}\r\n                />\r\n                {touchedFields.email && errors.email && <p>{errors.email.message}</p>}\r\n            </div>\r\n\r\n            <div className={log.formGroup}>\r\n                <label>Пароль</label>\r\n                <input\r\n                    className={`${log.emailInput} ${errors.password || errors._error ? log.error : \"\"}`}\r\n                    type=\"password\"\r\n                    {...register(\"password\", validationRules.password)}\r\n                />\r\n                {errors.password && <p>{errors.password.message}</p>}\r\n            </div>\r\n\r\n            <div className={log.formGroup}>\r\n                <label>\r\n                    <input className={log.checkbox} type=\"checkbox\" {...register(\"rememberMe\")} />\r\n                    Запомнить меня\r\n                </label>\r\n            </div>\r\n\r\n            {errors._error && (\r\n                \r\n                    <p>{errors._error.message}</p>\r\n                \r\n            )}\r\n\r\n            <button className={log.logButton} type=\"submit\">Войти</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","export const validationRules = {\r\n    email: {\r\n        required: \"Введите email\",\r\n        pattern:{\r\n            value: /^\\S+@\\S+\\.\\S+$/,\r\n            message: \"Введите корректный email\"\r\n        }\r\n    },\r\n    password: {\r\n        required: \"Введите пароль\",\r\n        minLength: {\r\n        value: 6,\r\n        message: \"Минимум 6 символов\"\r\n        }\r\n    },\r\n    dialogTextarea: {\r\n        required: \"Ведите текст сообщения\",\r\n        maxLength: {\r\n            value: 30,\r\n            message: \"Не дахуя ли символов\"\r\n        }\r\n    },\r\n    confirmPassword: (watch) => ({\r\n        required: \"Повторите пароль\",\r\n        validate: (value) =>\r\n        value === watch(\"password\") || \"Пароли не совпадают\"\r\n    })\r\n    };"],"names":["LoginForm","dispatch","useDispatch","navigate","useNavigate","register","handleSubmit","setError","formState","errors","touchedFields","useForm","mode","_jsxs","className","log","logForm","onSubmit","data","console","Login","email","password","rememberMe","children","formGroup","_jsx","htmlFor","type","emailInput","_error","error","validationRules","message","checkbox","logButton","required","pattern","value","minLength","dialogTextarea","maxLength","confirmPassword","watch","validate"],"sourceRoot":""}