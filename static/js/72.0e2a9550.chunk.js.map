{"version":3,"file":"static/js/72.0e2a9550.chunk.js","mappings":"4JACA,SAAgB,QAAU,wBAAwB,cAAgB,8BAA8B,SAAW,yBAAyB,cAAgB,8BAA8B,OAAS,uBAAuB,WAAa,2BAA2B,qBAAuB,qCAAqC,mBAAqB,mCAAmC,MAAQ,uB,uBCGtW,SAASA,EAAYC,GACnC,MAAMC,GAAWC,EAAAA,EAAAA,MACjB,IAAIC,EAAS,WAAWH,EAAMI,KAC9B,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAW,GAAGC,EAAOC,iBACD,YAAtBP,EAASQ,SAAyBF,EAAOG,OAAS,KACjDC,SAAA,EACDC,EAAAA,EAAAA,KAAA,OAAKC,IAAKb,EAAMc,OAAQC,IAAKf,EAAMgB,KAAMV,UAAWC,EAAOO,UAC3DF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAIf,EAAOQ,SAAEX,EAAMgB,SAG/B,CCVe,SAASG,EAAQnB,GAI9B,OAEEY,EAAAA,EAAAA,KAAA,OAAKN,UAAWC,EAAOa,QAAQT,SAAEX,EAAMoB,SAG3C,C,kCCRC,MA+BC,EA/BiBC,KACf,MAAMC,GAAWC,EAAAA,EAAAA,OACZ,SACHC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAACC,EAAM,cAAEC,KAElBC,EAAAA,EAAAA,IAAQ,CAACC,KAAM,WAQnB,OAEFnB,EAAAA,EAAAA,KAAA,OAAKN,UAAWC,EAAOyB,WAAWrB,UAChCN,EAAAA,EAAAA,MAAA,QAAM4B,SAAUR,GATCS,IACfC,QAAQC,IAAI,kFAAkBF,GAC9BZ,GAASe,EAAAA,EAAAA,IAAYH,EAAKI,OAC1BZ,GAAO,IAM8Bf,SAAA,EACjCC,EAAAA,EAAAA,KAAA,YACFN,UAAW,GAAGC,EAAOgC,sBAAsBX,EAAOU,KAAO/B,EAAOiC,MAAQ,QACnEhB,EAAU,OAAQiB,EAAAA,EAAgBC,kBACrCb,EAAcS,MAAQV,EAAOU,OAAQ1B,EAAAA,EAAAA,KAAA,KAAAD,SAAIiB,EAAOU,KAAKlB,WACrDR,EAAAA,EAAAA,KAAA,UAAQ+B,KAAK,SAASrC,UAAWC,EAAOqC,qBAAqBjC,SAAE,oBAE3D,ECzBC,SAASkC,IAEtB,MAAM,SAAEC,EAAQ,aAAEC,IAAiBC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,aAExDC,EAAmBL,EAASM,KAAIC,IACpCzC,EAAAA,EAAAA,KAACb,EAAW,CAAee,OAAQuC,EAAKvC,OAAQE,KAAMqC,EAAKrC,KAAMZ,GAAIiD,EAAKjD,IAAxDiD,EAAKjD,MAGnBkD,EAAuBP,EAAaK,KAAIhC,IAC5CR,EAAAA,EAAAA,KAACO,EAAO,CAAkBC,QAASA,EAAQA,QAAShB,GAAIgB,EAAQhB,IAAlDgB,EAAQhB,MAGxB,OACEC,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOgD,QAAQ5C,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAOiD,cAAc7C,SACjCwC,KAEHvC,EAAAA,EAAAA,KAAA,OAAKN,UAAWC,EAAOkD,SAAS9C,SAC7B2C,QAGP1C,EAAAA,EAAAA,KAACS,EAAU,MAGf,C,kCChCO,MAAMoB,EAAkB,CAC3BiB,MAAO,CACHC,SAAU,mDACVC,QAAQ,CACJC,MAAO,iBACPzC,QAAS,kHAGjB0C,SAAU,CACNH,SAAU,kFACVI,UAAW,CACXF,MAAO,EACPzC,QAAS,kGAGbsB,eAAgB,CACZiB,SAAU,6HACVK,UAAW,CACPH,MAAO,GACPzC,QAAS,8GAGjB6C,gBAAkBC,IAAK,CACnBP,SAAU,8FACVQ,SAAWN,GACXA,IAAUK,EAAM,aAAe,6G","sources":["webpack://myreact-app/./src/components/Dialogs/Dialog.module.css?7071","components/Dialogs/Dialogs__item/Dialogitem.jsx","components/Dialogs/Message/message.jsx","components/Dialogs/DialogForm.jsx","components/Dialogs/Dialog.jsx","UTILS/validations.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__hPS3D\",\"dialogs__list\":\"Dialog_dialogs__list__5sbTO\",\"messages\":\"Dialog_messages__Lj5gJ\",\"dialogs__item\":\"Dialog_dialogs__item__8B84t\",\"avatar\":\"Dialog_avatar__pGqQ9\",\"addMessage\":\"Dialog_addMessage__jCLfZ\",\"addNewMessage_button\":\"Dialog_addNewMessage_button__hPRYn\",\"textareaNewMessage\":\"Dialog_textareaNewMessage__MN7gw\",\"error\":\"Dialog_error__idtjt\"};","import dilogs from './../Dialog.module.css';\r\nimport {  Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n export default function DialogsItem(props) {\r\n  const location = useLocation();\r\n  let adress = `/dialog/${props.id}`;\r\n  return (\r\n    <li className={`${dilogs.dialogs__item} ${\r\n      location.pathname === '/dialog' ? dilogs.active : ''\r\n    }`}>\r\n      <img src={props.avatar} alt={props.name} className={dilogs.avatar} />\r\n      <Link to={adress}>{props.name}</Link>\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import dilogs from './../Dialog.module.css';\r\nimport React from 'react';\r\n\r\n\r\n\r\nexport default function Message(props) {\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className={dilogs.message}>{props.message}</div>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n","import { sendMessage } from '../../redux/dialogPageReducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport dilogs from './Dialog.module.css';\r\nimport { validationRules } from '../../UTILS/validations';\r\n \r\n const DialogForm =()=>{\r\n    const dispatch = useDispatch();\r\n    const{\r\n      register,\r\n      handleSubmit,\r\n      reset,\r\n      formState: {errors, touchedFields}\r\n  \r\n    } = useForm({mode: \"onBlur\"})\r\n  \r\n    const onSubmit =(data)=>{\r\n      console.log(\"Данные введены\", data)\r\n      dispatch(sendMessage(data.text));\r\n      reset()\r\n    }\r\n  \r\n    return(\r\n  \r\n  <div className={dilogs.addMessage}>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n          <textarea\r\n        className={`${dilogs.textareaNewMessage} ${errors.text ? dilogs.error : \"\"}`}\r\n         {...register (\"text\", validationRules.dialogTextarea)}/>\r\n         {touchedFields.text && errors.text && <p>{errors.text.message}</p>}\r\n          <button type='submit' className={dilogs.addNewMessage_button} >Add message</button>\r\n          </form>\r\n        </div>\r\n  \r\n    )\r\n  \r\n  }\r\n  export default DialogForm","import React from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport dilogs from './Dialog.module.css';\r\nimport DialogsItem from './Dialogs__item/Dialogitem';\r\nimport Message from './Message/message';\r\nimport DialogForm from './DialogForm';\r\n\r\nexport default function Dialog() {\r\n \r\n  const { userData, messagesData } = useSelector(state => state.DialogPage);\r\n\r\n  const userDataElements = userData.map(user => (\r\n    <DialogsItem key={user.id} avatar={user.avatar} name={user.name} id={user.id} />\r\n  ));\r\n\r\n  const messagesDataElements = messagesData.map(message => (\r\n    <Message key={message.id} message={message.message} id={message.id} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div className={dilogs.dialogs}>\r\n        <ul className={dilogs.dialogs__list}>\r\n          {userDataElements}\r\n        </ul>\r\n        <div className={dilogs.messages}>\r\n          {messagesDataElements}\r\n        </div>\r\n      </div>\r\n    <DialogForm/>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export const validationRules = {\r\n    email: {\r\n        required: \"Введите email\",\r\n        pattern:{\r\n            value: /^\\S+@\\S+\\.\\S+$/,\r\n            message: \"Введите корректный email\"\r\n        }\r\n    },\r\n    password: {\r\n        required: \"Введите пароль\",\r\n        minLength: {\r\n        value: 6,\r\n        message: \"Минимум 6 символов\"\r\n        }\r\n    },\r\n    dialogTextarea: {\r\n        required: \"Ведите текст сообщения\",\r\n        maxLength: {\r\n            value: 30,\r\n            message: \"Не дахуя ли символов\"\r\n        }\r\n    },\r\n    confirmPassword: (watch) => ({\r\n        required: \"Повторите пароль\",\r\n        validate: (value) =>\r\n        value === watch(\"password\") || \"Пароли не совпадают\"\r\n    })\r\n    };"],"names":["DialogsItem","props","location","useLocation","adress","id","_jsxs","className","dilogs","dialogs__item","pathname","active","children","_jsx","src","avatar","alt","name","Link","to","Message","message","DialogForm","dispatch","useDispatch","register","handleSubmit","reset","formState","errors","touchedFields","useForm","mode","addMessage","onSubmit","data","console","log","sendMessage","text","textareaNewMessage","error","validationRules","dialogTextarea","type","addNewMessage_button","Dialog","userData","messagesData","useSelector","state","DialogPage","userDataElements","map","user","messagesDataElements","dialogs","dialogs__list","messages","email","required","pattern","value","password","minLength","maxLength","confirmPassword","watch","validate"],"sourceRoot":""}