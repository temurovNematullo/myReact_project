{"version":3,"file":"static/js/215.a0ddbcde.chunk.js","mappings":"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","sources":["components/Users/UserItem/UserItem.jsx","components/Users/Pagination/Pagination.jsx","components/Users/userPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFollowing} from \"../../../redux/userPageReducer\";\r\nimport samurai from \"../../../img/samurai.png\";\r\nimport style from '../../Users/users.module.css';\r\nimport { NavLink} from 'react-router-dom';\r\n\r\n\r\nconst UserItem = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const FollowingInProgress = useSelector((state)=> state.UserPage.followingInProgress);\r\n\r\n  const handleFollowClick = () => { \r\n  dispatch(getFollowing(user));\r\n  };\r\n\r\n  return (\r\n    <div className={style.UsersInfo}>\r\n      <div className={style.userInfo}>\r\n        <NavLink to={`/main/${user.id}`}>\r\n          <img className={style.userImg} src={user.photos.small !== null ? user.photos.small : samurai} alt={user.name} />\r\n        </NavLink>\r\n        <button disabled={FollowingInProgress.some(id=>id === user.id)} className={style.userFollowButton} onClick={handleFollowClick}>\r\n          {user.followed ? \"Unfollow\" : \"Follow\"} \r\n        </button>\r\n      </div>\r\n      <div className={style.userLocationList}>\r\n        <div className={style.userInfoText}>\r\n          <p><strong>{user.name}</strong></p>\r\n          <p className={style.statustext}>{user.status}</p>\r\n        </div>\r\n        <div className={style.userInfoText}>\r\n          <p>{user.country || \"Country not \"}</p>\r\n          <p>{user.location || \"Location not \"}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport style from '../../Users/users.module.css';\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  const renderPagination = () => {\r\n    const pagination = [];\r\n    const maxPagesToShow = 3; // Количество страниц, отображаемых вокруг текущей\r\n    const ellipsis = '...'; // Многоточие для замены неактивных страниц\r\n  \r\n    // Всегда добавляем первую страницу\r\n    pagination.push(1);\r\n  \r\n    // многоточие, если текущая страница далеко от начала\r\n    if (currentPage > maxPagesToShow + 1) {\r\n      pagination.push(ellipsis);\r\n    }\r\n  \r\n    // страницы вокруг текущей\r\n    const startPage = Math.max(2, currentPage - maxPagesToShow);\r\n    const endPage = Math.min(totalPages - 1, currentPage + maxPagesToShow);\r\n  \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pagination.push(i);\r\n    }\r\n  \r\n    // многоточие, если текущая страница далеко от конца\r\n    if (currentPage < totalPages - maxPagesToShow) {\r\n      pagination.push(ellipsis);\r\n    }\r\n  \r\n    // Всегда добавляем последнюю страницу, если она больше 1\r\n    if (totalPages > 1) {\r\n      pagination.push(totalPages);\r\n    }\r\n  \r\n    return pagination;\r\n  };\r\n\r\n  return (\r\n    <div className={style.pagination}>\r\n      <button className={style.paginButton} onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n        &laquo;\r\n      </button>\r\n      {renderPagination().map((page, index) => (\r\n        <button \r\n          key={index} \r\n          onClick={() => typeof page === 'number' && onPageChange(page)} \r\n          className={currentPage === page ? style.activePage : style.disabledPage }\r\n          disabled={typeof page !== 'number'}\r\n        >\r\n          {page}\r\n        </button>\r\n      ))}\r\n      <button className={style.paginButton} onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages}>\r\n        &raquo;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setCurrentPage, getUsers } from \"../../redux/userPageReducer\";\r\nimport UserItem from '../Users/UserItem/UserItem';\r\nimport Pagination from '../Users/Pagination/Pagination';\r\nimport Preloader from '../common/preloader/Preloader';\r\n\r\n\r\n\r\nexport default function Users() {\r\n  const users = useSelector((state) => state.UserPage.userData);\r\n  const currentPage = useSelector((state) => state.UserPage.currentPage);\r\n  const totalUsersCount = useSelector((state) => state.UserPage.totalUsersCount);\r\n  const pageSize = useSelector((state) => state.UserPage.pageSize);\r\n  const isFetch = useSelector((state) => state.UserPage.isFetch);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n  dispatch(getUsers(currentPage, pageSize))\r\n  }, [currentPage, pageSize, dispatch]);\r\n\r\n  \r\n  const handlePageChange = (page) => {\r\n    if (page > 0 && page <= Math.ceil(totalUsersCount / pageSize)) {\r\n      dispatch(setCurrentPage(page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      {isFetch ? <Preloader/>: null }\r\n      {users.map((user) => (\r\n        <UserItem key={user.id} user={user} />\r\n      ))}\r\n      <Pagination \r\n        currentPage={currentPage} \r\n        totalPages={Math.ceil(totalUsersCount / pageSize)} \r\n        onPageChange={handlePageChange} \r\n      />\r\n    </div>\r\n  );\r\n}"],"names":["_ref","user","dispatch","useDispatch","FollowingInProgress","useSelector","state","UserPage","followingInProgress","_jsxs","className","style","UsersInfo","children","userInfo","_jsx","NavLink","to","id","userImg","src","photos","small","samurai","alt","name","disabled","some","userFollowButton","onClick","handleFollowClick","getFollowing","followed","userLocationList","userInfoText","statustext","status","country","location","currentPage","totalPages","onPageChange","pagination","paginButton","renderPagination","push","maxPagesToShow","startPage","Math","max","endPage","min","i","map","page","index","activePage","disabledPage","Users","users","userData","totalUsersCount","pageSize","isFetch","useEffect","getUsers","Preloader","UserItem","Pagination","ceil","setCurrentPage"],"sourceRoot":""}